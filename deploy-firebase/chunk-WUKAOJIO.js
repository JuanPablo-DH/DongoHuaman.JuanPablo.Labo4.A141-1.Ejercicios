var l=class s{constructor(e,t,r){this.nombre=e||"",this.email=t||"",this.clave=r||""}static validarNombre(e){if(!/^[a-zA-Z0-9]+$/.test(e))throw"El nombre debe tener letras y/o numeros"}static validarEmail(e){if(!/^[\w-]+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,7}$/.test(e))throw"Email no v\xE1lido"}static validarClave(e){if(!/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{3,}$/.test(e))throw"La contrase\xF1a debe tener al menos 3 caracteres, incluyendo al menos una letra y un numero"}setNombre(e){e.toUpperCase(),s.validarNombre(e),this.nombre=e}setEmail(e){e.toLowerCase(),s.validarEmail(e),this.email=e}setClave(e){s.validarClave(e),this.clave=e}getEmail(){return this.email}getClave(){return this.clave}equals(e,t){switch(t.toLowerCase(),t){case"login":return this.email===e.email&&this.clave===e.clave;case"registrar":return this.email===e.email;default:return!1}}static jsonToLista(e){let t=JSON.parse(e),r=[];for(let a=0;a<t.length;a++)t[a].nombre&&t[a].email&&t[a].clave&&r.push(new s(t[a].nombre,t[a].email,t[a].clave));return r}static jsonToInstancia(e){let t=JSON.parse(e);return t.nombre&&t.email&&t.clave?new s(t.nombre,t.email,t.clave):new s}static logear(e){let t=s.bdSelectAll();console.log(t);for(let r=0;r<t.length;r++)if(t[r].equals(e,"login"))return!0;return!1}static registrar(e){let t=s.bdSelectAll();for(let r=0;r<t.length;r++)if(t[r].equals(e,"registrar"))return!1;return s.bdInsertar(e),!0}static bdSelectAll(){let e=localStorage.getItem("usuarios"),t=[];return e===null?t:s.jsonToLista(e)}static bdInsertar(e){let t=s.bdSelectAll();t.push(e),localStorage.setItem("usuarios",JSON.stringify(t))}static bdUpdate(e){}static bdDelete(e){}};var i=class{static crearParaLogin(e,t){let r=new l;try{return r.setEmail(e),r.setClave(t),r}catch(a){throw a}}static crearParaRegistro(e,t,r){let a=new l;try{return a.setNombre(e),a.setEmail(t),a.setClave(r),a}catch(o){throw o}}static logear(e){return l.logear(e)}static registrar(e){return l.registrar(e)}};export{i as a};
